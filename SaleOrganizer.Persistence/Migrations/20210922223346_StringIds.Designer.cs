// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SaleOrganizer.Persistence;

namespace SaleOrganizer.Persistence.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20210922223346_StringIds")]
    partial class StringIds
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("SaleOrganizer.Domain.Cloth", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("DetailedStorageInfo")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("PhotoId")
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<string>("StorageInfo")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PhotoId");

                    b.ToTable("Clothes");
                });

            modelBuilder.Entity("SaleOrganizer.Domain.Offering", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("ClothId")
                        .HasColumnType("text");

                    b.Property<int>("DeliveryType")
                        .HasColumnType("integer");

                    b.Property<DateTime>("OfferingDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("OrderedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<string>("ReferenceLink")
                        .HasColumnType("text");

                    b.Property<DateTime?>("SendDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("TradeType")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ClothId");

                    b.ToTable("Offerings");
                });

            modelBuilder.Entity("SaleOrganizer.Domain.Photo", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Url")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Photos");
                });

            modelBuilder.Entity("SaleOrganizer.Domain.Purchase", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("ClothId")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DeliveryDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("DeliveryType")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("PaymentDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("ReferenceLink")
                        .HasColumnType("text");

                    b.Property<int>("TradeType")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ClothId");

                    b.ToTable("Purchases");
                });

            modelBuilder.Entity("SaleOrganizer.Domain.Cloth", b =>
                {
                    b.HasOne("SaleOrganizer.Domain.Photo", "Photo")
                        .WithMany()
                        .HasForeignKey("PhotoId");
                });

            modelBuilder.Entity("SaleOrganizer.Domain.Offering", b =>
                {
                    b.HasOne("SaleOrganizer.Domain.Cloth", "Cloth")
                        .WithMany("Offerings")
                        .HasForeignKey("ClothId");
                });

            modelBuilder.Entity("SaleOrganizer.Domain.Purchase", b =>
                {
                    b.HasOne("SaleOrganizer.Domain.Cloth", "Cloth")
                        .WithMany("Purchases")
                        .HasForeignKey("ClothId");
                });
#pragma warning restore 612, 618
        }
    }
}
